---
import BaseLayout from "@/layouts/BaseLayout.astro";

const url = new URL(Astro.request.url);
const accountCreated = url.searchParams.get("account-created") === "true";
---

<BaseLayout>
  <div class="wrapper | max-w-md space-y-8">
    <h1 class="text-3xl font-bold">Sign in</h1>

    <div
      id="error-box"
      class="alert-destructive hidden border-red-200 bg-red-50"
    >
      <svg
        xmlns="http://www.w3.org/2000/svg"
        width="24"
        height="24"
        viewBox="0 0 24 24"
        fill="none"
        stroke="currentColor"
        stroke-width="2"
        stroke-linecap="round"
        stroke-linejoin="round"
        ><circle cx="12" cy="12" r="10"></circle><line
          x1="12"
          x2="12"
          y1="8"
          y2="12"></line><line x1="12" x2="12.01" y1="16" y2="16"></line></svg
      >
      <h2>Something went wrong!</h2>
      <section id="error-message"></section>
    </div>

    {accountCreated && <p>Your account has been created. Please sign in.</p>}

    <form id="signin-form" class="space-y-6">
      <div class="grid gap-2">
        <label class="label" for="email">Email</label>
        <input
          id="email"
          class="input"
          type="email"
          name="email"
          placeholder="Email"
          value="test@email.com"
          required
        />
      </div>

      <div class="grid gap-2">
        <div class="| flex justify-between">
          <label class="label" for="password">Password</label>
          <a
            href="/forgot-password"
            class="text-sm underline-offset-4 hover:underline"
            >Forgot your password?</a
          >
        </div>
        <input
          id="password"
          class="input"
          type="password"
          name="password"
          placeholder="Password"
          value="password"
          required
        />
      </div>

      <button class="btn w-full" type="submit">Sign in</button>
    </form>

    <div
      class="after:border-border relative text-center text-sm after:absolute after:inset-0 after:top-1/2 after:z-0 after:flex after:items-center after:border-t"
    >
      <span class="bg-background text-muted-foreground relative z-10 px-2">
        Or continue with
      </span>
    </div>

    <button id="signin-github" class="btn-outline w-full" type="submit">
      <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">
        <path
          d="M12 .297c-6.63 0-12 5.373-12 12 0 5.303 3.438 9.8 8.205 11.385.6.113.82-.258.82-.577 0-.285-.01-1.04-.015-2.04-3.338.724-4.042-1.61-4.042-1.61C4.422 18.07 3.633 17.7 3.633 17.7c-1.087-.744.084-.729.084-.729 1.205.084 1.838 1.236 1.838 1.236 1.07 1.835 2.809 1.305 3.495.998.108-.776.417-1.305.76-1.605-2.665-.3-5.466-1.332-5.466-5.93 0-1.31.465-2.38 1.235-3.22-.135-.303-.54-1.523.105-3.176 0 0 1.005-.322 3.3 1.23.96-.267 1.98-.399 3-.405 1.02.006 2.04.138 3 .405 2.28-1.552 3.285-1.23 3.285-1.23.645 1.653.24 2.873.12 3.176.765.84 1.23 1.91 1.23 3.22 0 4.61-2.805 5.625-5.475 5.92.42.36.81 1.096.81 2.22 0 1.606-.015 2.896-.015 3.286 0 .315.21.69.825.57C20.565 22.092 24 17.592 24 12.297c0-6.627-5.373-12-12-12"
          fill="currentColor"></path>
      </svg>
      GitHub
    </button>

    <p>
      Donâ€™t have an account?
      <a href="/sign-up" class="ml-1 underline">Sign up here</a>.
    </p>
  </div>
</BaseLayout>

<script>
  import { authClient } from "@/lib/auth-client";

  const form = document.querySelector<HTMLFormElement>("#signin-form");
  const gitSignInButton =
    document.querySelector<HTMLButtonElement>("#signin-github");
  const errorBox = document.querySelector("#error-box") as HTMLElement;
  const errorMessage = document.querySelector("#error-message") as HTMLElement;

  const displayError = (message: string): void => {
    errorMessage.textContent = message;
    errorBox.classList.remove("hidden");
  };

  const hideError = (): void => {
    errorMessage.textContent = "";
    errorBox.classList.add("hidden");
  };

  form?.addEventListener("submit", async (e: SubmitEvent) => {
    e.preventDefault();
    hideError();

    const formData = new FormData(form);
    const email = formData.get("email") as string;
    const password = formData.get("password") as string;

    try {
      await authClient.signIn.email(
        {
          email,
          password,
        },
        {
          onSuccess: () => {
            window.location.href = "/dashboard";
          },
          onError: (context) => {
            console.error("Sign in failed:", context.error.message);
            displayError(context.error.message);
          },
        },
      );
    } catch (error) {
      console.error("Unexpected error during sign in:", error);
    }
  });

  gitSignInButton?.addEventListener("click", async (e: MouseEvent) => {
    e.preventDefault();
    hideError();

    try {
      await authClient.signIn.social(
        { provider: "github", callbackURL: "/dashboard" },
        {
          onError: (context) => {
            console.error("Sign in failed:", context.error.message);
            displayError(context.error.message);
          },
        },
      );
    } catch (error) {
      console.error("Unexpected error during sign in:", error);
    }
  });
</script>
